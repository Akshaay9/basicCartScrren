[{"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\index.js":"1","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\App.js":"2","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\login.js":"3","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\Home.js":"4"},{"size":206,"mtime":1611284123924,"results":"5","hashOfConfig":"6"},{"size":473,"mtime":1611719201629,"results":"7","hashOfConfig":"6"},{"size":3920,"mtime":1611727386522,"results":"8","hashOfConfig":"6"},{"size":1701,"mtime":1611729226770,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1einsj8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\index.js",[],["21","22"],"C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\App.js",["23"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./login\";\r\nimport \"./app.scss\"\r\nimport \"./app.css\"\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n      </Switch>\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\login.js",["24","25","26"],"import React, { useState } from \"react\";\r\n\r\nfunction Login({history}) {\r\n  // hooke\r\n  const [showError, setShowError] = useState(false);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState({\r\n    empty: \"\",\r\n    length: \"\",\r\n    email: \"\",\r\n    loggedIn: \"\",\r\n    upperCase: \"\",\r\n    loweCase: \"\",\r\n    number: \"\",\r\n    specialCharacter: \"\",\r\n  });\r\n  // helper functions\r\n  let flag = true;\r\n  var re = /\\S+@\\S+\\.\\S+/;\r\n  const { email, password } = form;\r\n  var special   = /[\\W]{1,}/ ; \r\n  // function to check error\r\n  const logIn = () => {\r\n    if (flag == true) {\r\n      setError((error) => ({\r\n        ...error,\r\n        loggedIn: \"You Are being logged in\",\r\n      }));\r\n      localStorage.setItem(\"login\", JSON.stringify(\"logg in\"));\r\n      setTimeout(() => {\r\n        history.push(\"/home\")\r\n      },1500)\r\n    }\r\n  };\r\n  // submit functon\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setShowError(true);\r\n    console.log(form);\r\n    setError({\r\n      empty: \"\",\r\n      email: \"\",\r\n      length: \"\",\r\n      loggedIn: \"\",\r\n      upperCase: \"\",\r\n      lowerCase: \"\",\r\n      number: \"\",\r\n      specialCharacter: \"\",\r\n    });\r\n    // blank email and password\r\n    if (email == \"\" || password == \"\") {\r\n      setError((error) => ({\r\n        ...error,\r\n        empty: \"please fill out all relevant sections\",\r\n      }));\r\n      flag = false;\r\n    } else {\r\n      flag = true;\r\n    }\r\n    // invalid email\r\n    if (!re.test(email)) {\r\n      setError((error) => ({\r\n        ...error,\r\n        email: \"Not an valid email\",\r\n      }));\r\n      flag = false;\r\n    } \r\n    // password length\r\n    if (password.length < 8) {\r\n      setError((error) => ({\r\n        ...error,\r\n        length: \"Password length should be min 8 character\",\r\n      }));\r\n      flag = false;\r\n    } \r\n    // upper\r\n    if (password.search(/[A-Z]/) < 0) {\r\n      setError((error) => ({\r\n        ...error,\r\n        upperCase: \"password should conntain 1 uppercase\",\r\n      }));\r\n      flag = false;\r\n    } \r\n    // lower\r\n    if (password.search(/[a-z]/) < 0) {\r\n      setError((error) => ({\r\n        ...error,\r\n        lowerCase: \"password should conntain 1 lowerCase\",\r\n      }));\r\n      flag = false;\r\n    } \r\n    // number\r\n    if (password.search(/[0-9]/) < 0) {\r\n      setError((error) => ({\r\n        ...error,\r\n        number: \"password should conntain 1 number\",\r\n      }));\r\n      flag = false;\r\n    } \r\n    // special char\r\n    if (!special.test(password)) {\r\n      setError((error) => ({\r\n        ...error,\r\n        specialCharacter: \"password should conntain 1 specialCharacter\",\r\n      }));\r\n      flag = false;\r\n    } \r\n\r\n   \r\n    console.log(flag);\r\n    logIn();\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <form action=\"submit\">\r\n        <h1>Login</h1>\r\n        <label htmlFor=\"Email\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          value={form.email}\r\n          \r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n          onClick={() => setShowError(false)}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"text\"\r\n          value={form.password}\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n          onClick={() => setShowError(false)}\r\n        />\r\n        <button onClick={(e) => submitHandler(e)}>Submit</button>\r\n      </form>\r\n      <div className={`errors ${showError ? \"show\" : \"hide\"}`}>\r\n        <p>{error.empty}</p>\r\n        <p>{error.email}</p>\r\n        <p>{error.length}</p>\r\n        <p>{error.upperCase}</p>\r\n        <p>{error.lowerCase}</p>\r\n        <p>{error.number}</p>\r\n        <p>{error.specialCharacter}</p>\r\n        <h3 className=\"green\" style={{ color: \"green\" }}>\r\n          {error.loggedIn}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n// nair.akshay98@gmail.com\r\n","C:\\Users\\Sathya\\Desktop\\screeningsecond\\src\\Home.js",["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":50,"nodeType":"35","messageId":"36","endLine":2,"endColumn":54},{"ruleId":"37","severity":1,"message":"38","line":27,"column":14,"nodeType":"39","messageId":"40","endLine":27,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":54,"column":15,"nodeType":"39","messageId":"40","endLine":54,"endColumn":17},{"ruleId":"37","severity":1,"message":"38","line":54,"column":33,"nodeType":"39","messageId":"40","endLine":54,"endColumn":35},{"ruleId":"33","severity":1,"message":"41","line":4,"column":17,"nodeType":"35","messageId":"36","endLine":4,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":37,"column":8,"nodeType":"44","endLine":37,"endColumn":22,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [history]",{"range":"51","text":"52"},[870,884],"[history]"]